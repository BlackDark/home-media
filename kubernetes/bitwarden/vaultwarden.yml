apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
spec:
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      # initContainers:
      #   - name: volume-permissions
      #     image: busybox:1.35
      #     command: ["sh", "-c", "chown 1000:1000 /data"]
      #     volumeMounts:
      #       - name: app-data
      #         mountPath: /data
      containers:
        - name: vaultwarden
          image: vaultwarden/server:1.30.3-alpine
          ports:
            - name: http
              containerPort: 80
          env:
            - name: TZ
              value: Europe/Berlin
          volumeMounts:
            - name: app-data
              mountPath: /data
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: vaultwarden-local

---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
spec:
  ports:
    - port: 80
      name: http
      targetPort: http
  selector:
    app: vaultwarden

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  rules:
    - host: bitwarden.oci.eduard-marbach.de
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: vaultwarden
                port:
                  name: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden-admin
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: authentik-auth@kubernetescrd
spec:
  rules:
    - host: bitwarden.oci.eduard-marbach.de
      http:
        paths:
          - pathType: Prefix
            path: /admin
            backend:
              service:
                name: vaultwarden
                port:
                  name: http
