apiVersion: v1
kind: Service
metadata:
  name: homepage
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: homepage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:v0.8.7"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
            - secretRef:
                name: homepage
          volumeMounts:
            - mountPath: /app/config/custom.js
              name: homepage-config
              subPath: custom.js
            - mountPath: /app/config/custom.css
              name: homepage-config
              subPath: custom.css
            - mountPath: /app/config/bookmarks.yaml
              name: homepage-config
              subPath: bookmarks.yaml
            # - mountPath: /app/config/docker.yaml
            #   name: homepage-config
            #   subPath: docker.yaml
            # - mountPath: /app/config/kubernetes.yaml
            #   name: homepage-config
            #   subPath: kubernetes.yaml
            - mountPath: /app/config/services.yaml
              name: homepage-config
              subPath: services.yaml
            - mountPath: /app/config/settings.yaml
              name: homepage-config
              subPath: settings.yaml
            - mountPath: /app/config/widgets.yaml
              name: homepage-config
              subPath: widgets.yaml
            - mountPath: /app/config/logs
              name: logs
      volumes:
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs
          emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: authentik-auth@kubernetescrd
spec:
  rules:
    - host: "homepage.oci.eduard-marbach.de"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: homepage
                port:
                  number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: homepage
type: Opaque
stringData:
  HOMEPAGE_VAR_SONARR_API_KEY: "{{ homepage.sonarrApiKey }}"
  HOMEPAGE_VAR_SONARR_ANIME_API_KEY: "{{ homepage.sonarrAnimeApiKey }}"
  HOMEPAGE_VAR_RADARR_API_KEY: "{{ homepage.radarrApiKey }}"
  HOMEPAGE_VAR_JELLYFIN_API_KEY: "{{ homepage.jellyfinApiKey }}"
  HOMEPAGE_VAR_JELLYSEERR_API_KEY: "{{ homepage.jellyseerrApiKey }}"
  HOMEPAGE_VAR_SABNZBD_API_KEY: "{{ homepage.sabnzbdApiKey }}"
