apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: media-app-data
        - name: media
          persistentVolumeClaim:
            claimName: media-downloads
        - name: dev-dri
          hostPath:
            path: /dev/dri
      containers:
        - name: jellyfin
          image: linuxserver/jellyfin:10.8.13-1-ls245
          ports:
            - name: http
              containerPort: 8096
          envFrom:
            - configMapRef:
                name: common-deployment-environment
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /config
              name: app-data
              subPath: jellyfin
            - mountPath: /data
              name: media
            - mountPath: /dev/dri
              name: dev-dri

---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
spec:
  ports:
    - port: 80
      name: http
      targetPort: http
  selector:
    app: jellyfin
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-local
  annotations:
    traefik.ingress.kubernetes.io/router.priority: "1001" # overwrite default https redirect
spec:
  rules:
    - host: jellyfin.fritz.box
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: jellyfin
                port:
                  name: http
    - host: jellyfin.10.0.0.5.sslip.io
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: jellyfin
                port:
                  name: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-basic
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: media-basic-auth@kubernetescrd
spec:
  rules:
    - host: jellyfin-basic.oci.eduard-marbach.de
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: jellyfin
                port:
                  name: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: authentik-auth@kubernetescrd
spec:
  rules:
    - host: jellyfin.oci.eduard-marbach.de
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: jellyfin
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-test
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  rules:
    - host: jellyfin-test.oci.eduard-marbach.de
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: jellyfin
                port:
                  name: http
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: jellyfin-local
# spec:
#   storageClassName: local-path
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
