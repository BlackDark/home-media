apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
spec:
  selector:
    matchLabels:
      app: node-red
  template:
    metadata:
      labels:
        app: node-red
    spec:
      initContainers:
        - name: volume-permissions
          image: busybox:1.36
          command: ["sh", "-c", "chown 1000:1000 /data"]
          volumeMounts:
            - name: app-data
              mountPath: /data
      containers:
        - name: node-red
          image: nodered/node-red:3.1.5-16
          livenessProbe:
            httpGet:
              path: /
              port: http
          ports:
            - name: http
              containerPort: 1880
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: TZ
              value: Europe/Berlin
          volumeMounts:
            - name: app-data
              mountPath: /data
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: node-red-local

---
apiVersion: v1
kind: Service
metadata:
  name: node-red
spec:
  ports:
    - port: 80
      name: http
      targetPort: http
  selector:
    app: node-red

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: node-red
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: authentik-auth@kubernetescrd
spec:
  rules:
    - host: node-red.oci.eduard-marbach.de
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: node-red
                port:
                  name: http
